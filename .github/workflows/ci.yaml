---
name: CI

on:
  push:
    paths-ignore:
      - README.md
      - .gitignore
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/submission
  USE_DOTNET_VERSION: '7.0.x'
  WORKING_DIRECTORY_PATH: 'src'
  DOCKER_BUILD_CONTEXT: './src/flamflam.SubmissionService'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.USE_DOTNET_VERSION }}
      - name: Install dependencies
        run: dotnet restore
        working-directory: ${{ env.WORKING_DIRECTORY_PATH }}
      - name: Test with the dotnet CLI
        run: dotnet test
        working-directory: ${{ env.WORKING_DIRECTORY_PATH }}

  build:
    needs:
      - test
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Get Tag Name
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "Tag Name: $TAG_NAME"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        id: get_tag_name

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push image tag ${{ steps.get_tag_name.outputs.tag_name }}
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.DOCKER_BUILD_CONTEXT }}
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag_name.outputs.tag_name }}

      - name: Build and push 'latest' tag
        if: github.event_name == 'release'
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.DOCKER_BUILD_CONTEXT }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          working-directory: ${{ env.WORKING_DIRECTORY_PATH }}
    
